let ReactFulVariableMaker = (interal, moreData, extraData) => { return { acompanyingData: moreData, eventMoreData: extraData, aInternal: interal, aListener: function(val) {}, set update(val) { this.aInternal = val; this.aListener(val); }, get update() { return this.aInternal; }, registerListener: function(listener) { this.aListener = listener; } }};var byteToHex = []; for (var iii = 0; iii < 256; ++iii) { byteToHex[iii] = (iii + 0x100).toString(16).substr(1); } function bytesToUuid(buf, offset) { var iii = offset || 0; var bth = byteToHex; return ([ bth[buf[iii++]], bth[buf[iii++]], bth[buf[iii++]], bth[buf[iii++]], '-', bth[buf[iii++]], bth[buf[iii++]], '-', bth[buf[iii++]], bth[buf[iii++]], '-', bth[buf[iii++]], bth[buf[iii++]], '-', bth[buf[iii++]], bth[buf[iii++]], bth[buf[iii++]], bth[buf[iii++]], bth[buf[iii++]], bth[buf[iii++]] ]).join(''); } var getRandomValues = (typeof (crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) || (typeof (msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto)); function uuidv4(options, buf, offset) { var rnds = new Array(16); var iii = buf && offset || 0; if (typeof (options) == 'string') { buf = options === 'binary' ? new Array(16) : null; options = null; } options = options || {}; let mathRNG = ()  => { for (var iii = 0, r; iii < 16; iii++) { if ((iii & 0x03) === 0) r = Math.random() * 0x100000000; rnds[iii] = r >>> ((iii & 0x03) << 3) & 0xff; } return rnds; }; var rnds = options.random || (options.rng || mathRNG)(); rnds[6] = (rnds[6] & 0x0f) | 0x40; rnds[8] = (rnds[8] & 0x3f) | 0x80; if (buf) { for (var ii = 0; ii < 16; ++ii) { buf[iii + ii] = rnds[ii]; } } return buf || bytesToUuid(rnds); } console.log(uuidv4()) 

//('Not all web pages were made the same, it is our job to fix that' - Harvey Randall 2020)
//(setTimeout(() => {let bodyMain = document.getElementsByTagName('BODY')[0];let headMain = document.getElementsByTagName('HEAD')[1];bodyMain.id = 'body';headMain.id = 'head'},500))
function MontiorInputs(item,reason,functionToCall){let textInput = document.getElementById(item);textInput.addEventListener(reason,function input(input){setTimeout(function test(){functionToCall(input.target.value,input.key)},5)},false)}
function element(type,text,id,parent,className){let newElement = document.createElement(type);if(document.getElementById(id) === null){newElement.innerHTML = text;newElement.id = id;let FoundParent = document.getElementById(parent);FoundParent.appendChild(newElement)};if(!(document.getElementById(id) === null)){newElement.innerHTML = text};if(!(className === undefined)){newElement.className = className};return(newElement)}
function updatelement(id,inner){let FoundParent = document.getElementById(id);FoundParent.innerHTML = inner}
function updateText(id,text,wipeValue){let Node = document.getElementById(id);Node.innerHTML = text;if(wipeValue){Node.value = text}}
let OpenFuns = []
function WindowMonitor(ReturnFunc){history.move = (body) => {for(let i=0;i<OpenFuns.length;i=i+1){let item = OpenFuns[i];if(!(item === undefined)){item()}};let Root = document.body;Root.innerHTML = '';history.pushState('','',body);ReturnFunc()}}
function RouterPoint(location,exact,component){if(exact){if(window.location.pathname === location){OpenFuns.push(component())}};if(exact === false){if(window.location.pathname.startsWith(location)){OpenFuns.push(component())}}}
function Link(href,text,id,parent,className){element('button',text,id,parent,className);MontiorInputs(id,'click',(value) => {if(!(href === window.location.pathname)){history.move(href)}})}
function createReactiveVariable(defaultState){return(ReactFulVariableMaker(defaultState))}
function ReactfulElement(ElementType,reactVar,parent){let Element = element(ElementType,reactVar.aInternal,uuidv4(),parent);reactVar.registerListener((value) => {Element.innerHTML = value});}
function reactiveTemplate(predefinedVars,defaultValueArray,valueTemplate,typeIn,parent){;let Var = ReactFulVariableMaker(valueTemplate);;Var.acompanyingData = valueTemplate;;let MetaData = {};for(let i=0;i<predefinedVars.length;i=i+1){MetaData[predefinedVars[i]] = defaultValueArray[i];valueTemplate = valueTemplate.replaceAll('%{'+predefinedVars[i]+'}%',defaultValueArray[i])};Var.update = valueTemplate;Var.eventMoreData = MetaData;ReactfulElement(typeIn,Var,parent);return(Var)}
function updateTemplate(varToUpdate,newVal,reactfulElement){;let Template = reactfulElement.acompanyingData;let ExistingData = reactfulElement.eventMoreData;ExistingData[varToUpdate] = newVal;reactfulElement.eventMoreData = ExistingData;for(let i=0;i<Object.entries(ExistingData).length;i=i+1){Template = Template.replaceAll('%{'+Object.entries(ExistingData)[i][0]+'}%',Object.entries(ExistingData)[i][1])};reactfulElement.update = Template}

function PageTest(){let colors = ['red','blue','green'];let i = 0;let hello = document.getElementById('element');let text = 'this changes a little too quickly I might give some one epilepsy';let Interval = setInterval(function input(){if(i === 3){i = 0};let hello = document.getElementById('MainText');hello.style.color = colors[i];i = i + 1}, 200);;element('h1',text,'MainText','body');element('h1','Scoody DOO! harry!!!!!! smells dhgjhdfjgjkdfg','MainText2','body');return(() => {clearInterval(Interval)})}
function ConstantElements(){Link('/','HomePage','1','body','nav-button');Link('/pages','pages','5','body','nav-button');Link('/mathsQuiz','Maths Quiz','50','body','nav-button');Link('/MultiplayerChat','Multiplayer Chat','55','body','nav-button')}
function MathsQuiz(){;let Operator = ['+','-'][Math.round((Math.random() * 1))];let firstNum = Math.round((Math.random() * 10));let secondNum = Math.round((Math.random() * 10));let yourScore = 0;let guess = '';element('h1',firstNum + Operator + secondNum,'Question','body');element('h2','Your score is ' + yourScore,'Score','body');;element('input','','QuestionBox','body');element('button','Submit','QuestionSubmit','body');;element('h1','your guess: ','Debug','body','guess');function WorkOutAnswer(){if(Operator === '+'){if(Number(guess) === firstNum + secondNum){yourScore = yourScore + 1}};if(Operator === '-'){if(Number(guess) === (firstNum - secondNum)){yourScore = yourScore + 1}};Operator = ['+','-'][Math.round((Math.random() * 1))];firstNum = Math.round((Math.random() * 10));secondNum = Math.round((Math.random() * 10));updateText('Question',firstNum + Operator + secondNum);updateText('Score','Your score is ' + yourScore);updateText('QuestionSubmit','Submit');updateText('QuestionBox','',true);updateText('Debug','your guess: ')};;MontiorInputs('QuestionBox','keydown',(value,key) => {guess = value;updateText('Debug','your guess: ' + value);if(key === 'Enter'){WorkOutAnswer()}});;MontiorInputs('QuestionSubmit','click',(value) => {WorkOutAnswer()})}
function Homepage(){element('h1','Welcome to MY SUPER COOL website this website it purely written in the .Harvey framework which manipulates the DOM!!!!!!','Homepage','body');element('h1','Right ok compilation test 999999',uuidv4(),'body');element('h1','Right ok compilation test 999999',uuidv4(),'body');element('h6','This might work, please update maybe????',uuidv4(),'body');let MainDiv = uuidv4();element('div','',MainDiv,'body');element('h1','Inside Div',uuidv4(),MainDiv);let pink = 'pink';let stylesID = uuidv4();element('style','body{color: '+pink+' !important}',stylesID,MainDiv);pink = 'orange';;let MainUpdater = createReactiveVariable('hello');let MainStyleSheet = createReactiveVariable('h1{font-size:1em}');ReactfulElement('h1',MainUpdater,'body');ReactfulElement('style',MainStyleSheet,'head');setTimeout(() => {updatelement(stylesID,'body{color: '+pink+' !important}')},1000);let TemplateElement = reactiveTemplate(['Test','val2'],['this is a test','Val  2 2'],'This is the test here %{Test}% %{val2}%','h2','body');updateTemplate('Test','another test',TemplateElement);updateTemplate('Test','another test 6',TemplateElement);updateTemplate('val2','Harvey is realllllly dfgfdjgjdfgjid',TemplateElement);setInterval(() => {updateTemplate('val2',Date.now(),TemplateElement);MainUpdater.update = 'Hello there' + Date.now()}, 1)}
function MultiplayerChat(){element('h1','Multiplayer Chat','Title','body');element('input','enter message','input','body')}
function RouterRoot(){ConstantElements();;RouterPoint('/pages',true,PageTest);RouterPoint('/mathsQuiz',true,MathsQuiz);RouterPoint('/MultiplayerChat',true,MultiplayerChat);RouterPoint('/',true,Homepage)}

let main = element('button','Click to start Render cycle','UUID','body')
main.addEventListener('click',() => {main.remove();RouterRoot()})
main.remove()
RouterRoot()

WindowMonitor(RouterRoot)